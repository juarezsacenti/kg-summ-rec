### BUILD:  docker build -t gemsec:1.0 .
### RUN:    docker run --rm -it --gpus all -v "$PWD"/gemsec_data:/data -w /data gemsec:1.0 $CMD"

FROM tensorflow/tensorflow:1.12.3-gpu-py3
# CONTENT
# python=3.5.2
# numpy=1.15.4
# scipy=1.1.0
# tensorflow-gpu=1.12.3

# 1. Install git
RUN apt-get update
RUN apt-get install -y git

# 2. Download project
RUN git clone https://github.com/benedekrozemberczki/GEMSEC.git

RUN pip3 install networkx==2.4
RUN pip3 install tqdm==4.19.5
RUN pip3 install numpy==1.13.3
RUN pip3 install pandas==0.20.3
RUN pip3 install jsonschema==2.6.0
RUN pip3 install texttable==1.5.0
RUN pip3 install python-louvain==0.11

# 3. Convert input format

# 4. Run application
CMD cd GEMSEC \
    && python3 src/embedding_clustering.py --input "./data/politician_edges.csv" \
    --embedding-output "./output/embeddings/politician_embedding.csv" --cluster-mean-output \
    "./output/cluster_means/politician_means.csv" --log-output "./output/logs/politician.json" --assignment-output \
    "./output/assignments/politician.json" --dump-matrices True --model "GEMSECWithRegularization"  \
    --P 1 --Q 1 --walker "first" --dimensions 16 --random-walk-length 80 \
    --num-of-walks 5 --window-size 5 --distortion 0.75 --negative-sample-number 10 \
    --initial-learning-rate 0.01 --minimal-learning-rate 0.001 --annealing-factor 1 \
    --initial-gamma 0.1 --final-gamma 0.5 --lambd 2.0**-4 --cluster-number 20 \
    --overlap-weighting "normalized_overlap" --regularization-noise 10**-8

#CMD cd GEMSEC \
#    && python3 src/embedding_clustering.py --input "/data/temp/kg.csv" \
#    --embedding-output "/data/temp/embedding.csv" --cluster-mean-output \
#    "/data/temp/means.csv" --log-output "/data/temp/log.json" --assignment-output \
#    "/data/temp/assignment.json" --dump-matrices True --model "GEMSECWithRegularization"  \
#    --P 1 --Q 1 --walker "first" --dimensions 16 --random-walk-length 80 \
#    --num-of-walks 5 --window-size 5 --distortion 0.75 --negative-sample-number 10 \
#    --initial-learning-rate 0.01 --minimal-learning-rate 0.001 --annealing-factor 1 \
#    --initial-gamma 0.1 --final-gamma 0.5 --lambd 2.0**-4 --cluster-number 20 \
#    --overlap-weighting "normalized_overlap" --regularization-noise 10**-8
